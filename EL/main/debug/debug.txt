Create itemsets.
Merge itemsets.
Create parsing table.
4.76 seconds used to create parser.
================= Action Table =================
(0, newline) => (s14)
(0, epsilon) => (s15)
(0, identifier) => (s45)
(0, ;) => (s13)
(0, if) => (s16)
(1, zero) => (acc)
(1, newline) => (s8)
(1, ;) => (s6)
(2, newline) => (s14)
(2, epsilon) => (s15)
(2, identifier) => (s45)
(2, ;) => (s13)
(2, if) => (s16)
(3, newline) => (s14)
(3, epsilon) => (s15)
(3, identifier) => (s45)
(3, ;) => (s13)
(3, if) => (s16)
(4, newline) => (s8)
(4, ;) => (s6)
(4, }) => (s20)
(5, newline) => (s8)
(5, ;) => (s6)
(5, }) => (s22)
(6, newline) => (s14)
(6, epsilon) => (s15)
(6, identifier) => (s45)
(6, ;) => (s13)
(6, if) => (s16)
(7, zero) => (r65536)
(7, newline) => (r65536)
(7, ;) => (r65536)
(7, }) => (r65536)
(8, newline) => (s14)
(8, epsilon) => (s15)
(8, identifier) => (s45)
(8, ;) => (s13)
(8, if) => (s16)
(9, zero) => (r65537)
(9, newline) => (r65537)
(9, ;) => (r65537)
(9, }) => (r65537)
(10, zero) => (r65538)
(10, newline) => (r65538)
(10, ;) => (r65538)
(10, }) => (r65538)
(11, zero) => (r131072)
(11, newline) => (r131072)
(11, ;) => (r131072)
(11, }) => (r131072)
(12, zero) => (r131073)
(12, newline) => (r131073)
(12, ;) => (r131073)
(12, }) => (r131073)
(13, zero) => (r131074)
(13, newline) => (r131074)
(13, ;) => (r131074)
(13, }) => (r131074)
(14, zero) => (r131075)
(14, newline) => (r131075)
(14, ;) => (r131075)
(14, }) => (r131075)
(15, zero) => (r131076)
(15, newline) => (r131076)
(15, ;) => (r131076)
(15, }) => (r131076)
(16, () => (s17)
(17, number) => (s62)
(17, string) => (s69)
(17, 0+) => (s59)
(17, 0-) => (s58)
(17, identifier) => (s45)
(17, () => (s26)
(18, )) => (s19)
(19, {) => (s2)
(20, zero) => (r196608)
(20, newline) => (r196608)
(20, ;) => (r196608)
(20, }) => (r196608)
(20, else) => (s21)
(21, {) => (s3)
(22, zero) => (r196609)
(22, newline) => (r196609)
(22, ;) => (r196609)
(22, }) => (r196609)
(23, =) => (s24)
(24, number) => (s62)
(24, string) => (s69)
(24, 0+) => (s57)
(24, 0-) => (s56)
(24, identifier) => (s45)
(24, () => (s26)
(25, zero) => (r262144)
(25, newline) => (r262144)
(25, ;) => (r262144)
(25, }) => (r262144)
(26, number) => (s62)
(26, string) => (s69)
(26, 0+) => (s59)
(26, 0-) => (s58)
(26, identifier) => (s45)
(26, () => (s26)
(27, zero) => (r327681)
(27, newline) => (r327681)
(27, 0+) => (s38)
(27, 0-) => (s39)
(27, ;) => (r327681)
(27, )) => (r327681)
(27, }) => (r327681)
(27, <) => (s30)
(27, <=) => (s31)
(27, >) => (s32)
(27, >=) => (s33)
(27, ==) => (s34)
(28, number) => (s62)
(28, string) => (s69)
(28, 0+) => (s47)
(28, 0-) => (s46)
(28, identifier) => (s45)
(28, () => (s26)
(29, zero) => (r327680)
(29, newline) => (r327680)
(29, 0+) => (s38)
(29, 0-) => (s39)
(29, ;) => (r327680)
(29, )) => (r327680)
(29, }) => (r327680)
(30, number) => (r393216)
(30, string) => (r393216)
(30, 0+) => (r393216)
(30, 0-) => (r393216)
(30, identifier) => (r393216)
(30, () => (r393216)
(31, number) => (r393217)
(31, string) => (r393217)
(31, 0+) => (r393217)
(31, 0-) => (r393217)
(31, identifier) => (r393217)
(31, () => (r393217)
(32, number) => (r393218)
(32, string) => (r393218)
(32, 0+) => (r393218)
(32, 0-) => (r393218)
(32, identifier) => (r393218)
(32, () => (r393218)
(33, number) => (r393219)
(33, string) => (r393219)
(33, 0+) => (r393219)
(33, 0-) => (r393219)
(33, identifier) => (r393219)
(33, () => (r393219)
(34, number) => (r393220)
(34, string) => (r393220)
(34, 0+) => (r393220)
(34, 0-) => (r393220)
(34, identifier) => (r393220)
(34, () => (r393220)
(35, number) => (s62)
(35, string) => (s69)
(35, 0+) => (s47)
(35, 0-) => (s46)
(35, identifier) => (s45)
(35, () => (s26)
(36, zero) => (r458752)
(36, newline) => (r458752)
(36, 0+) => (r458752)
(36, 0-) => (r458752)
(36, ;) => (r458752)
(36, )) => (r458752)
(36, }) => (r458752)
(36, <) => (r458752)
(36, <=) => (r458752)
(36, >) => (r458752)
(36, >=) => (r458752)
(36, ==) => (r458752)
(36, *) => (s43)
(36, /) => (s44)
(37, zero) => (r458753)
(37, newline) => (r458753)
(37, 0+) => (r458753)
(37, 0-) => (r458753)
(37, ;) => (r458753)
(37, )) => (r458753)
(37, }) => (r458753)
(37, <) => (r458753)
(37, <=) => (r458753)
(37, >) => (r458753)
(37, >=) => (r458753)
(37, ==) => (r458753)
(37, *) => (s43)
(37, /) => (s44)
(38, number) => (r524288)
(38, string) => (r524288)
(38, 0+) => (r524288)
(38, 0-) => (r524288)
(38, identifier) => (r524288)
(38, () => (r524288)
(39, number) => (r524289)
(39, string) => (r524289)
(39, 0+) => (r524289)
(39, 0-) => (r524289)
(39, identifier) => (r524289)
(39, () => (r524289)
(40, number) => (s62)
(40, string) => (s69)
(40, 0+) => (s47)
(40, 0-) => (s46)
(40, identifier) => (s45)
(40, () => (s26)
(41, zero) => (r589824)
(41, newline) => (r589824)
(41, 0+) => (r589824)
(41, 0-) => (r589824)
(41, ;) => (r589824)
(41, )) => (r589824)
(41, }) => (r589824)
(41, <) => (r589824)
(41, <=) => (r589824)
(41, >) => (r589824)
(41, >=) => (r589824)
(41, ==) => (r589824)
(41, *) => (r589824)
(41, /) => (r589824)
(42, zero) => (r589825)
(42, newline) => (r589825)
(42, 0+) => (r589825)
(42, 0-) => (r589825)
(42, ;) => (r589825)
(42, )) => (r589825)
(42, }) => (r589825)
(42, <) => (r589825)
(42, <=) => (r589825)
(42, >) => (r589825)
(42, >=) => (r589825)
(42, ==) => (r589825)
(42, *) => (r589825)
(42, /) => (r589825)
(43, number) => (r655360)
(43, string) => (r655360)
(43, 0+) => (r655360)
(43, 0-) => (r655360)
(43, identifier) => (r655360)
(43, () => (r655360)
(44, number) => (r655361)
(44, string) => (r655361)
(44, 0+) => (r655361)
(44, 0-) => (r655361)
(44, identifier) => (r655361)
(44, () => (r655361)
(45, zero) => (r720896)
(45, newline) => (r720896)
(45, 0+) => (r720896)
(45, 0-) => (r720896)
(45, ;) => (r720896)
(45, )) => (r720896)
(45, }) => (r720896)
(45, =) => (r720896)
(45, <) => (r720896)
(45, <=) => (r720896)
(45, >) => (r720896)
(45, >=) => (r720896)
(45, ==) => (r720896)
(45, *) => (r720896)
(45, /) => (r720896)
(46, number) => (s62)
(46, 0+) => (s47)
(46, 0-) => (s46)
(46, () => (s49)
(47, number) => (s62)
(47, 0+) => (s47)
(47, 0-) => (s46)
(47, () => (s51)
(48, number) => (s62)
(48, 0+) => (s50)
(48, 0-) => (s48)
(48, () => (s49)
(49, number) => (s62)
(49, 0+) => (s50)
(49, 0-) => (s48)
(50, number) => (s62)
(50, 0+) => (s50)
(50, 0-) => (s48)
(50, () => (s51)
(51, number) => (s62)
(51, 0+) => (s50)
(51, 0-) => (s48)
(52, number) => (s62)
(52, 0+) => (s53)
(52, 0-) => (s52)
(52, () => (s49)
(53, number) => (s62)
(53, 0+) => (s53)
(53, 0-) => (s52)
(53, () => (s51)
(54, number) => (s62)
(54, 0+) => (s55)
(54, 0-) => (s54)
(54, () => (s49)
(55, number) => (s62)
(55, 0+) => (s55)
(55, 0-) => (s54)
(55, () => (s51)
(56, number) => (s62)
(56, 0+) => (s57)
(56, 0-) => (s56)
(56, () => (s49)
(57, number) => (s62)
(57, 0+) => (s57)
(57, 0-) => (s56)
(57, () => (s51)
(58, number) => (s62)
(58, 0+) => (s59)
(58, 0-) => (s58)
(58, () => (s49)
(59, number) => (s62)
(59, 0+) => (s59)
(59, 0-) => (s58)
(59, () => (s51)
(60, number) => (s62)
(60, 0+) => (s61)
(60, 0-) => (s60)
(60, () => (s49)
(61, number) => (s62)
(61, 0+) => (s61)
(61, 0-) => (s60)
(61, () => (s51)
(62, zero) => (r786432)
(62, newline) => (r786432)
(62, 0+) => (r786432)
(62, 0-) => (r786432)
(62, ;) => (r786432)
(62, )) => (r786432)
(62, }) => (r786432)
(62, <) => (r786432)
(62, <=) => (r786432)
(62, >) => (r786432)
(62, >=) => (r786432)
(62, ==) => (r786432)
(62, *) => (r786432)
(62, /) => (r786432)
(63, zero) => (r786433)
(63, newline) => (r786433)
(63, 0+) => (r786433)
(63, 0-) => (r786433)
(63, ;) => (r786433)
(63, )) => (r786433)
(63, }) => (r786433)
(63, <) => (r786433)
(63, <=) => (r786433)
(63, >) => (r786433)
(63, >=) => (r786433)
(63, ==) => (r786433)
(63, *) => (r786433)
(63, /) => (r786433)
(64, )) => (s65)
(65, zero) => (r786434)
(65, newline) => (r786434)
(65, 0+) => (r786434)
(65, 0-) => (r786434)
(65, ;) => (r786434)
(65, )) => (r786434)
(65, }) => (r786434)
(65, <) => (r786434)
(65, <=) => (r786434)
(65, >) => (r786434)
(65, >=) => (r786434)
(65, ==) => (r786434)
(65, *) => (r786434)
(65, /) => (r786434)
(66, zero) => (r786435)
(66, newline) => (r786435)
(66, 0+) => (r786435)
(66, 0-) => (r786435)
(66, ;) => (r786435)
(66, )) => (r786435)
(66, }) => (r786435)
(66, <) => (r786435)
(66, <=) => (r786435)
(66, >) => (r786435)
(66, >=) => (r786435)
(66, ==) => (r786435)
(66, *) => (r786435)
(66, /) => (r786435)
(67, )) => (s68)
(68, zero) => (r786436)
(68, newline) => (r786436)
(68, 0+) => (r786436)
(68, 0-) => (r786436)
(68, ;) => (r786436)
(68, )) => (r786436)
(68, }) => (r786436)
(68, <) => (r786436)
(68, <=) => (r786436)
(68, >) => (r786436)
(68, >=) => (r786436)
(68, ==) => (r786436)
(68, *) => (r786436)
(68, /) => (r786436)
(69, zero) => (r851968)
(69, newline) => (r851968)
(69, 0+) => (r851968)
(69, 0-) => (r851968)
(69, ;) => (r851968)
(69, )) => (r851968)
(69, }) => (r851968)
(69, <) => (r851968)
(69, <=) => (r851968)
(69, >) => (r851968)
(69, >=) => (r851968)
(69, ==) => (r851968)
(69, *) => (r851968)
(69, /) => (r851968)
(70, )) => (s71)
(71, zero) => (r917504)
(71, newline) => (r917504)
(71, 0+) => (r917504)
(71, 0-) => (r917504)
(71, ;) => (r917504)
(71, )) => (r917504)
(71, }) => (r917504)
(71, <) => (r917504)
(71, <=) => (r917504)
(71, >) => (r917504)
(71, >=) => (r917504)
(71, ==) => (r917504)
(71, *) => (r917504)
(71, /) => (r917504)
(72, zero) => (r917505)
(72, newline) => (r917505)
(72, 0+) => (r917505)
(72, 0-) => (r917505)
(72, ;) => (r917505)
(72, )) => (r917505)
(72, }) => (r917505)
(72, <) => (r917505)
(72, <=) => (r917505)
(72, >) => (r917505)
(72, >=) => (r917505)
(72, ==) => (r917505)
(72, *) => (r917505)
(72, /) => (r917505)
(73, zero) => (r917506)
(73, newline) => (r917506)
(73, 0+) => (r917506)
(73, 0-) => (r917506)
(73, ;) => (r917506)
(73, )) => (r917506)
(73, }) => (r917506)
(73, <) => (r917506)
(73, <=) => (r917506)
(73, >) => (r917506)
(73, >=) => (r917506)
(73, ==) => (r917506)
(73, *) => (r917506)
(73, /) => (r917506)
(74, zero) => (r917507)
(74, newline) => (r917507)
(74, 0+) => (r917507)
(74, 0-) => (r917507)
(74, ;) => (r917507)
(74, )) => (r917507)
(74, }) => (r917507)
(74, <) => (r917507)
(74, <=) => (r917507)
(74, >) => (r917507)
(74, >=) => (r917507)
(74, ==) => (r917507)
(74, *) => (r917507)
(74, /) => (r917507)

================== Goto Table ==================
(0, $if_stmt) => 11
(0, $assign_stmt) => 12
(0, $stmt_sequence) => 1
(0, $statement) => 10
(0, $id) => 23
(2, $if_stmt) => 11
(2, $assign_stmt) => 12
(2, $stmt_sequence) => 4
(2, $statement) => 10
(2, $id) => 23
(3, $if_stmt) => 11
(3, $assign_stmt) => 12
(3, $stmt_sequence) => 5
(3, $statement) => 10
(3, $id) => 23
(6, $if_stmt) => 11
(6, $assign_stmt) => 12
(6, $statement) => 7
(6, $id) => 23
(8, $if_stmt) => 11
(8, $assign_stmt) => 12
(8, $statement) => 9
(8, $id) => 23
(17, $id) => 74
(17, $simple_exp) => 27
(17, $exp) => 18
(17, $factor) => 42
(17, $term) => 37
(17, $num) => 72
(17, $str) => 73
(24, $id) => 74
(24, $simple_exp) => 27
(24, $exp) => 25
(24, $factor) => 42
(24, $term) => 37
(24, $num) => 72
(24, $str) => 73
(26, $id) => 74
(26, $simple_exp) => 27
(26, $exp) => 70
(26, $factor) => 42
(26, $term) => 37
(26, $num) => 72
(26, $str) => 73
(27, $comparison_op) => 28
(27, $addop) => 35
(28, $id) => 74
(28, $simple_exp) => 29
(28, $factor) => 42
(28, $term) => 37
(28, $num) => 72
(28, $str) => 73
(29, $addop) => 35
(35, $id) => 74
(35, $factor) => 42
(35, $term) => 36
(35, $num) => 72
(35, $str) => 73
(36, $mulop) => 40
(37, $mulop) => 40
(40, $id) => 74
(40, $factor) => 41
(40, $num) => 72
(40, $str) => 73
(46, $num) => 63
(47, $num) => 66
(48, $num) => 63
(49, $num) => 64
(50, $num) => 66
(51, $num) => 67
(52, $num) => 63
(53, $num) => 66
(54, $num) => 63
(55, $num) => 66
(56, $num) => 63
(57, $num) => 66
(58, $num) => 63
(59, $num) => 66
(60, $num) => 63
(61, $num) => 66
>> Shift symbol `;`. Goto state 13.
>> Reduce `;` to `$statement`. Goto state 10.
>> Reduce `$statement` to `$stmt_sequence`. Goto state 1.
>> Shift symbol `newline`. Goto state 8.
[E] unexpected symbol zero at 1:-1
