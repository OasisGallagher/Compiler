"load parser" at 23:18:47.
"load parser" costs 0.20 seconds.
>> [S] `if`. Goto state 16.
>> [S] `(`. Goto state 2.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 47.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [S] `[`. Goto state 148.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 47.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 49.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 60.
>> [R] `ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [R] `RelationalExpression` to `EqualityExpression`. Goto state 40.
>> [R] `EqualityExpression` to `BitwiseAndExpression`. Goto state 33.
>> [R] `BitwiseAndExpression` to `LogicalOrExpression`. Goto state 50.
>> [R] `LogicalOrExpression` to `ConditionalExpression`. Goto state 37.
>> [R] `ConditionalExpression` to `AssignmentExpression`. Goto state 32.
>> [R] `AssignmentExpression` to `Expression`. Goto state 161.
>> [S] `]`. Goto state 208.
>> [R] `[ Expression ]` to `MemberOperator`. Goto state 150.
>> [R] `CallExpression MemberOperator` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 49.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 60.
>> [R] `ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [S] `<=`. Goto state 136.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 47.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 100.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 175.
>> [R] `RelationalExpression <= ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [R] `RelationalExpression` to `EqualityExpression`. Goto state 40.
>> [R] `EqualityExpression` to `BitwiseAndExpression`. Goto state 33.
>> [R] `BitwiseAndExpression` to `LogicalOrExpression`. Goto state 50.
>> [R] `LogicalOrExpression` to `ConditionalExpression`. Goto state 37.
>> [R] `ConditionalExpression` to `AssignmentExpression`. Goto state 32.
>> [R] `AssignmentExpression` to `Expression`. Goto state 95.
>> [S] `)`. Goto state 189.
>> [R] `( Expression )` to `ParenthesizedExpression`. Goto state 89.
>> [S] `{`. Goto state 27.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 76.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [S] `.`. Goto state 147.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 192.
>> [R] `. Identifier` to `MemberOperator`. Goto state 150.
>> [R] `CallExpression MemberOperator` to `CallExpression`. Goto state 36.
>> [S] `(`. Goto state 146.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 47.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [S] `[`. Goto state 148.
>> [S] `identifier`. Goto state 15.
>> [R] `identifier` to `Identifier`. Goto state 47.
>> [R] `Identifier` to `SimpleExpression`. Goto state 62.
>> [R] `SimpleExpression` to `PrimaryExpression`. Goto state 57.
>> [R] `PrimaryExpression` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 49.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 60.
>> [R] `ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [R] `RelationalExpression` to `EqualityExpression`. Goto state 40.
>> [R] `EqualityExpression` to `BitwiseAndExpression`. Goto state 33.
>> [R] `BitwiseAndExpression` to `LogicalOrExpression`. Goto state 50.
>> [R] `LogicalOrExpression` to `ConditionalExpression`. Goto state 37.
>> [R] `ConditionalExpression` to `AssignmentExpression`. Goto state 32.
>> [R] `AssignmentExpression` to `Expression`. Goto state 161.
>> [S] `]`. Goto state 208.
>> [R] `[ Expression ]` to `MemberOperator`. Goto state 150.
>> [R] `CallExpression MemberOperator` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 49.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 60.
>> [R] `ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [R] `RelationalExpression` to `EqualityExpression`. Goto state 40.
>> [R] `EqualityExpression` to `BitwiseAndExpression`. Goto state 33.
>> [R] `BitwiseAndExpression` to `LogicalOrExpression`. Goto state 50.
>> [R] `LogicalOrExpression` to `ConditionalExpression`. Goto state 37.
>> [R] `ConditionalExpression` to `AssignmentExpression`. Goto state 168.
>> [R] `AssignmentExpression` to `ArgumentList`. Goto state 167.
>> [S] `)`. Goto state 210.
>> [R] `( ArgumentList )` to `Arguments`. Goto state 149.
>> [R] `CallExpression Arguments` to `CallExpression`. Goto state 36.
>> [R] `CallExpression` to `LeftSideExpression`. Goto state 49.
>> [R] `LeftSideExpression` to `PostfixExpression`. Goto state 56.
>> [R] `PostfixExpression` to `UnaryExpression`. Goto state 68.
>> [R] `UnaryExpression` to `MultiplicativeExpression`. Goto state 51.
>> [R] `MultiplicativeExpression` to `AdditiveExpression`. Goto state 29.
>> [R] `AdditiveExpression` to `ShiftExpression`. Goto state 60.
>> [R] `ShiftExpression` to `RelationalExpression`. Goto state 58.
>> [R] `RelationalExpression` to `EqualityExpression`. Goto state 40.
>> [R] `EqualityExpression` to `BitwiseAndExpression`. Goto state 33.
>> [R] `BitwiseAndExpression` to `LogicalOrExpression`. Goto state 50.
>> [R] `LogicalOrExpression` to `ConditionalExpression`. Goto state 37.
>> [R] `ConditionalExpression` to `AssignmentExpression`. Goto state 32.
>> [R] `AssignmentExpression` to `Expression`. Goto state 41.
>> [R] `Expression` to `ExpressionStatement`. Goto state 42.
>> [S] `;`. Goto state 80.
>> [R] `ExpressionStatement ;` to `Statement`. Goto state 79.
>> [R] `Statement` to `BlockStatementsPrefix`. Goto state 74.
>> [R] `BlockStatementsPrefix` to `BlockStatements`. Goto state 73.
>> [S] `}`. Goto state 157.
>> [R] `{ BlockStatements }` to `Block`. Goto state 34.
>> [R] `Block` to `Statement`. Goto state 152.
>> [R] `if ParenthesizedExpression Statement` to `IfStatement`. Goto state 48.
>> [R] `IfStatement` to `Statement`. Goto state 63.
>> [R] `Statement` to `TopStatement`. Goto state 65.
>> [R] `TopStatement` to `TopStatementsPrefix`. Goto state 67.
>> [R] `TopStatementsPrefix` to `TopStatements`. Goto state 66.

=====================Accept=====================

================== SyntaxTree ==================
©¸©¤©¤©¤ if
     ©À©¤©¤©¤ <=
     ©¦    ©À©¤©¤©¤ callm
     ©¦    ©¦    ©¸©¤©¤©¤ []
     ©¦    ©¦         ©¸©¤©¤©¤ i
     ©¦    ©¸©¤©¤©¤ pivot
     ©À©¤©¤©¤ calla
     ©¦    ©¸©¤©¤©¤ arguments
     ©¦         ©¸©¤©¤©¤ callm
     ©¦              ©¸©¤©¤©¤ []
     ©¦                   ©¸©¤©¤©¤ i
     ©¸©¤©¤©¤ null

