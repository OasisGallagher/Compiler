Create itemsets.
Merge itemsets.
Create parsing table.
5.08 seconds used to create parser.
$assign_stmt          {identifier}
$stmt_sequence        {identifier ; if}
$statement            {identifier ; if}
$if_stmt              {if}
$exp                  {number string 0+ 0- identifier (}
$id                   {identifier}
$simple_exp           {number string 0+ 0- identifier (}
$comparison_op        {< <= > >= ==}
$addop                {0+ 0-}
$term                 {number string 0+ 0- identifier (}
$mulop                {* /}
$factor               {number string 0+ 0- identifier (}
$num                  {number 0+ 0-}
$str                  {string}

================= Action Table =================
(0, identifier) => (s41)
(0, ;) => (s11)
(0, if) => (s12)
(1, zero) => (acc)
(1, ;) => (s6)
(2, identifier) => (s41)
(2, ;) => (s11)
(2, if) => (s12)
(3, identifier) => (s41)
(3, ;) => (s11)
(3, if) => (s12)
(4, ;) => (s6)
(4, }) => (s16)
(5, ;) => (s6)
(5, }) => (s18)
(6, identifier) => (s41)
(6, ;) => (s11)
(6, if) => (s12)
(7, zero) => (r65536)
(7, ;) => (r65536)
(7, }) => (r65536)
(8, zero) => (r65537)
(8, ;) => (r65537)
(8, }) => (r65537)
(9, zero) => (r131072)
(9, ;) => (r131072)
(9, }) => (r131072)
(10, zero) => (r131073)
(10, ;) => (r131073)
(10, }) => (r131073)
(11, zero) => (r131074)
(11, ;) => (r131074)
(11, }) => (r131074)
(12, () => (s13)
(13, number) => (s58)
(13, string) => (s65)
(13, 0+) => (s55)
(13, 0-) => (s54)
(13, identifier) => (s41)
(13, () => (s22)
(14, )) => (s15)
(15, {) => (s2)
(16, zero) => (r196608)
(16, ;) => (r196608)
(16, }) => (r196608)
(16, else) => (s17)
(17, {) => (s3)
(18, zero) => (r196609)
(18, ;) => (r196609)
(18, }) => (r196609)
(19, =) => (s20)
(20, number) => (s58)
(20, string) => (s65)
(20, 0+) => (s53)
(20, 0-) => (s52)
(20, identifier) => (s41)
(20, () => (s22)
(21, zero) => (r262144)
(21, ;) => (r262144)
(21, }) => (r262144)
(22, number) => (s58)
(22, string) => (s65)
(22, 0+) => (s55)
(22, 0-) => (s54)
(22, identifier) => (s41)
(22, () => (s22)
(23, zero) => (r327681)
(23, 0+) => (s34)
(23, 0-) => (s35)
(23, ;) => (r327681)
(23, )) => (r327681)
(23, }) => (r327681)
(23, <) => (s26)
(23, <=) => (s27)
(23, >) => (s28)
(23, >=) => (s29)
(23, ==) => (s30)
(24, number) => (s58)
(24, string) => (s65)
(24, 0+) => (s43)
(24, 0-) => (s42)
(24, identifier) => (s41)
(24, () => (s22)
(25, zero) => (r327680)
(25, 0+) => (s34)
(25, 0-) => (s35)
(25, ;) => (r327680)
(25, )) => (r327680)
(25, }) => (r327680)
(26, number) => (r393216)
(26, string) => (r393216)
(26, 0+) => (r393216)
(26, 0-) => (r393216)
(26, identifier) => (r393216)
(26, () => (r393216)
(27, number) => (r393217)
(27, string) => (r393217)
(27, 0+) => (r393217)
(27, 0-) => (r393217)
(27, identifier) => (r393217)
(27, () => (r393217)
(28, number) => (r393218)
(28, string) => (r393218)
(28, 0+) => (r393218)
(28, 0-) => (r393218)
(28, identifier) => (r393218)
(28, () => (r393218)
(29, number) => (r393219)
(29, string) => (r393219)
(29, 0+) => (r393219)
(29, 0-) => (r393219)
(29, identifier) => (r393219)
(29, () => (r393219)
(30, number) => (r393220)
(30, string) => (r393220)
(30, 0+) => (r393220)
(30, 0-) => (r393220)
(30, identifier) => (r393220)
(30, () => (r393220)
(31, number) => (s58)
(31, string) => (s65)
(31, 0+) => (s43)
(31, 0-) => (s42)
(31, identifier) => (s41)
(31, () => (s22)
(32, zero) => (r458752)
(32, 0+) => (r458752)
(32, 0-) => (r458752)
(32, ;) => (r458752)
(32, )) => (r458752)
(32, }) => (r458752)
(32, <) => (r458752)
(32, <=) => (r458752)
(32, >) => (r458752)
(32, >=) => (r458752)
(32, ==) => (r458752)
(32, *) => (s39)
(32, /) => (s40)
(33, zero) => (r458753)
(33, 0+) => (r458753)
(33, 0-) => (r458753)
(33, ;) => (r458753)
(33, )) => (r458753)
(33, }) => (r458753)
(33, <) => (r458753)
(33, <=) => (r458753)
(33, >) => (r458753)
(33, >=) => (r458753)
(33, ==) => (r458753)
(33, *) => (s39)
(33, /) => (s40)
(34, number) => (r524288)
(34, string) => (r524288)
(34, 0+) => (r524288)
(34, 0-) => (r524288)
(34, identifier) => (r524288)
(34, () => (r524288)
(35, number) => (r524289)
(35, string) => (r524289)
(35, 0+) => (r524289)
(35, 0-) => (r524289)
(35, identifier) => (r524289)
(35, () => (r524289)
(36, number) => (s58)
(36, string) => (s65)
(36, 0+) => (s43)
(36, 0-) => (s42)
(36, identifier) => (s41)
(36, () => (s22)
(37, zero) => (r589824)
(37, 0+) => (r589824)
(37, 0-) => (r589824)
(37, ;) => (r589824)
(37, )) => (r589824)
(37, }) => (r589824)
(37, <) => (r589824)
(37, <=) => (r589824)
(37, >) => (r589824)
(37, >=) => (r589824)
(37, ==) => (r589824)
(37, *) => (r589824)
(37, /) => (r589824)
(38, zero) => (r589825)
(38, 0+) => (r589825)
(38, 0-) => (r589825)
(38, ;) => (r589825)
(38, )) => (r589825)
(38, }) => (r589825)
(38, <) => (r589825)
(38, <=) => (r589825)
(38, >) => (r589825)
(38, >=) => (r589825)
(38, ==) => (r589825)
(38, *) => (r589825)
(38, /) => (r589825)
(39, number) => (r655360)
(39, string) => (r655360)
(39, 0+) => (r655360)
(39, 0-) => (r655360)
(39, identifier) => (r655360)
(39, () => (r655360)
(40, number) => (r655361)
(40, string) => (r655361)
(40, 0+) => (r655361)
(40, 0-) => (r655361)
(40, identifier) => (r655361)
(40, () => (r655361)
(41, zero) => (r720896)
(41, 0+) => (r720896)
(41, 0-) => (r720896)
(41, ;) => (r720896)
(41, )) => (r720896)
(41, }) => (r720896)
(41, =) => (r720896)
(41, <) => (r720896)
(41, <=) => (r720896)
(41, >) => (r720896)
(41, >=) => (r720896)
(41, ==) => (r720896)
(41, *) => (r720896)
(41, /) => (r720896)
(42, number) => (s58)
(42, 0+) => (s43)
(42, 0-) => (s42)
(42, () => (s45)
(43, number) => (s58)
(43, 0+) => (s43)
(43, 0-) => (s42)
(43, () => (s47)
(44, number) => (s58)
(44, 0+) => (s46)
(44, 0-) => (s44)
(44, () => (s45)
(45, number) => (s58)
(45, 0+) => (s46)
(45, 0-) => (s44)
(46, number) => (s58)
(46, 0+) => (s46)
(46, 0-) => (s44)
(46, () => (s47)
(47, number) => (s58)
(47, 0+) => (s46)
(47, 0-) => (s44)
(48, number) => (s58)
(48, 0+) => (s49)
(48, 0-) => (s48)
(48, () => (s45)
(49, number) => (s58)
(49, 0+) => (s49)
(49, 0-) => (s48)
(49, () => (s47)
(50, number) => (s58)
(50, 0+) => (s51)
(50, 0-) => (s50)
(50, () => (s45)
(51, number) => (s58)
(51, 0+) => (s51)
(51, 0-) => (s50)
(51, () => (s47)
(52, number) => (s58)
(52, 0+) => (s53)
(52, 0-) => (s52)
(52, () => (s45)
(53, number) => (s58)
(53, 0+) => (s53)
(53, 0-) => (s52)
(53, () => (s47)
(54, number) => (s58)
(54, 0+) => (s55)
(54, 0-) => (s54)
(54, () => (s45)
(55, number) => (s58)
(55, 0+) => (s55)
(55, 0-) => (s54)
(55, () => (s47)
(56, number) => (s58)
(56, 0+) => (s57)
(56, 0-) => (s56)
(56, () => (s45)
(57, number) => (s58)
(57, 0+) => (s57)
(57, 0-) => (s56)
(57, () => (s47)
(58, zero) => (r786432)
(58, 0+) => (r786432)
(58, 0-) => (r786432)
(58, ;) => (r786432)
(58, )) => (r786432)
(58, }) => (r786432)
(58, <) => (r786432)
(58, <=) => (r786432)
(58, >) => (r786432)
(58, >=) => (r786432)
(58, ==) => (r786432)
(58, *) => (r786432)
(58, /) => (r786432)
(59, zero) => (r786433)
(59, 0+) => (r786433)
(59, 0-) => (r786433)
(59, ;) => (r786433)
(59, )) => (r786433)
(59, }) => (r786433)
(59, <) => (r786433)
(59, <=) => (r786433)
(59, >) => (r786433)
(59, >=) => (r786433)
(59, ==) => (r786433)
(59, *) => (r786433)
(59, /) => (r786433)
(60, )) => (s61)
(61, zero) => (r786434)
(61, 0+) => (r786434)
(61, 0-) => (r786434)
(61, ;) => (r786434)
(61, )) => (r786434)
(61, }) => (r786434)
(61, <) => (r786434)
(61, <=) => (r786434)
(61, >) => (r786434)
(61, >=) => (r786434)
(61, ==) => (r786434)
(61, *) => (r786434)
(61, /) => (r786434)
(62, zero) => (r786435)
(62, 0+) => (r786435)
(62, 0-) => (r786435)
(62, ;) => (r786435)
(62, )) => (r786435)
(62, }) => (r786435)
(62, <) => (r786435)
(62, <=) => (r786435)
(62, >) => (r786435)
(62, >=) => (r786435)
(62, ==) => (r786435)
(62, *) => (r786435)
(62, /) => (r786435)
(63, )) => (s64)
(64, zero) => (r786436)
(64, 0+) => (r786436)
(64, 0-) => (r786436)
(64, ;) => (r786436)
(64, )) => (r786436)
(64, }) => (r786436)
(64, <) => (r786436)
(64, <=) => (r786436)
(64, >) => (r786436)
(64, >=) => (r786436)
(64, ==) => (r786436)
(64, *) => (r786436)
(64, /) => (r786436)
(65, zero) => (r851968)
(65, 0+) => (r851968)
(65, 0-) => (r851968)
(65, ;) => (r851968)
(65, )) => (r851968)
(65, }) => (r851968)
(65, <) => (r851968)
(65, <=) => (r851968)
(65, >) => (r851968)
(65, >=) => (r851968)
(65, ==) => (r851968)
(65, *) => (r851968)
(65, /) => (r851968)
(66, )) => (s67)
(67, zero) => (r917504)
(67, 0+) => (r917504)
(67, 0-) => (r917504)
(67, ;) => (r917504)
(67, )) => (r917504)
(67, }) => (r917504)
(67, <) => (r917504)
(67, <=) => (r917504)
(67, >) => (r917504)
(67, >=) => (r917504)
(67, ==) => (r917504)
(67, *) => (r917504)
(67, /) => (r917504)
(68, zero) => (r917505)
(68, 0+) => (r917505)
(68, 0-) => (r917505)
(68, ;) => (r917505)
(68, )) => (r917505)
(68, }) => (r917505)
(68, <) => (r917505)
(68, <=) => (r917505)
(68, >) => (r917505)
(68, >=) => (r917505)
(68, ==) => (r917505)
(68, *) => (r917505)
(68, /) => (r917505)
(69, zero) => (r917506)
(69, 0+) => (r917506)
(69, 0-) => (r917506)
(69, ;) => (r917506)
(69, )) => (r917506)
(69, }) => (r917506)
(69, <) => (r917506)
(69, <=) => (r917506)
(69, >) => (r917506)
(69, >=) => (r917506)
(69, ==) => (r917506)
(69, *) => (r917506)
(69, /) => (r917506)
(70, zero) => (r917507)
(70, 0+) => (r917507)
(70, 0-) => (r917507)
(70, ;) => (r917507)
(70, )) => (r917507)
(70, }) => (r917507)
(70, <) => (r917507)
(70, <=) => (r917507)
(70, >) => (r917507)
(70, >=) => (r917507)
(70, ==) => (r917507)
(70, *) => (r917507)
(70, /) => (r917507)

================== Goto Table ==================
(0, $assign_stmt) => 10
(0, $stmt_sequence) => 1
(0, $statement) => 8
(0, $if_stmt) => 9
(0, $id) => 19
(2, $assign_stmt) => 10
(2, $stmt_sequence) => 4
(2, $statement) => 8
(2, $if_stmt) => 9
(2, $id) => 19
(3, $assign_stmt) => 10
(3, $stmt_sequence) => 5
(3, $statement) => 8
(3, $if_stmt) => 9
(3, $id) => 19
(6, $assign_stmt) => 10
(6, $statement) => 7
(6, $if_stmt) => 9
(6, $id) => 19
(13, $exp) => 14
(13, $id) => 70
(13, $simple_exp) => 23
(13, $term) => 33
(13, $factor) => 38
(13, $num) => 68
(13, $str) => 69
(20, $exp) => 21
(20, $id) => 70
(20, $simple_exp) => 23
(20, $term) => 33
(20, $factor) => 38
(20, $num) => 68
(20, $str) => 69
(22, $exp) => 66
(22, $id) => 70
(22, $simple_exp) => 23
(22, $term) => 33
(22, $factor) => 38
(22, $num) => 68
(22, $str) => 69
(23, $comparison_op) => 24
(23, $addop) => 31
(24, $id) => 70
(24, $simple_exp) => 25
(24, $term) => 33
(24, $factor) => 38
(24, $num) => 68
(24, $str) => 69
(25, $addop) => 31
(31, $id) => 70
(31, $term) => 32
(31, $factor) => 38
(31, $num) => 68
(31, $str) => 69
(32, $mulop) => 36
(33, $mulop) => 36
(36, $id) => 70
(36, $factor) => 37
(36, $num) => 68
(36, $str) => 69
(42, $num) => 59
(43, $num) => 62
(44, $num) => 59
(45, $num) => 60
(46, $num) => 62
(47, $num) => 63
(48, $num) => 59
(49, $num) => 62
(50, $num) => 59
(51, $num) => 62
(52, $num) => 59
(53, $num) => 62
(54, $num) => 59
(55, $num) => 62
(56, $num) => 59
(57, $num) => 62
>> Shift symbol `if`. Goto state 12.
>> Shift symbol `(`. Goto state 13.
>> Shift symbol `identifier`. Goto state 41.
>> Reduce `identifier` to `$id`. Goto state 70.
>> Reduce `$id` to `$factor`. Goto state 38.
>> Reduce `$factor` to `$term`. Goto state 33.
>> Reduce `$term` to `$simple_exp`. Goto state 23.
>> Shift symbol `<`. Goto state 26.
>> Reduce `<` to `$comparison_op`. Goto state 24.
>> Shift symbol `number`. Goto state 58.
>> Reduce `number` to `$num`. Goto state 68.
>> Reduce `$num` to `$factor`. Goto state 38.
>> Reduce `$factor` to `$term`. Goto state 33.
>> Reduce `$term` to `$simple_exp`. Goto state 25.
>> Reduce `$simple_exp $comparison_op $simple_exp` to `$exp`. Goto state 14.
>> Shift symbol `)`. Goto state 15.
>> Shift symbol `{`. Goto state 2.
>> Shift symbol `identifier`. Goto state 41.
>> Reduce `identifier` to `$id`. Goto state 19.
>> Shift symbol `=`. Goto state 20.
>> Shift symbol `number`. Goto state 58.
>> Reduce `number` to `$num`. Goto state 68.
>> Reduce `$num` to `$factor`. Goto state 38.
>> Reduce `$factor` to `$term`. Goto state 33.
>> Reduce `$term` to `$simple_exp`. Goto state 23.
>> Reduce `$simple_exp` to `$exp`. Goto state 21.
>> Reduce `$id = $exp` to `$assign_stmt`. Goto state 10.
>> Reduce `$assign_stmt` to `$statement`. Goto state 8.
>> Reduce `$statement` to `$stmt_sequence`. Goto state 4.
>> Shift symbol `;`. Goto state 6.
>> Shift symbol `identifier`. Goto state 41.
>> Reduce `identifier` to `$id`. Goto state 19.
>> Shift symbol `=`. Goto state 20.
>> Shift symbol `number`. Goto state 58.
>> Reduce `number` to `$num`. Goto state 68.
>> Reduce `$num` to `$factor`. Goto state 38.
>> Reduce `$factor` to `$term`. Goto state 33.
>> Reduce `$term` to `$simple_exp`. Goto state 23.
>> Reduce `$simple_exp` to `$exp`. Goto state 21.
>> Reduce `$id = $exp` to `$assign_stmt`. Goto state 10.
>> Reduce `$assign_stmt` to `$statement`. Goto state 7.
>> Reduce `$stmt_sequence ; $statement` to `$stmt_sequence`. Goto state 4.
>> Shift symbol `;`. Goto state 6.
[E] unexpected symbol } at 4:1
