(27) 	Shift/Reduce
{
  { Block : { · BlockStatements }, ( zero/number/string/identifier/;/var/{/if/while/for/(/continue/break/return/function/+/-/delete/void/++/--/~/!/new/[/this/null/true/false/}/else ) }, 
  { ObjectLiteral : { · }, ( =/*=//=/%=/+=/-=/<<=/>>=/&=/|=/^=/[/./(/;/,/?/||/&/==/!=/</>/<=/>=/<</>>/+/-/*///%/++/-- ) }, 
  { ObjectLiteral : { · FieldList }, ( =/*=//=/%=/+=/-=/<<=/>>=/&=/|=/^=/[/./(/;/,/?/||/&/==/!=/</>/<=/>=/<</>>/+/-/*///%/++/-- ) }, 
}
! 遇到"}"时
! 	(1) 移入, 视为ObjectLiteral.
!	(2) 规约, 将epsilon规约为BlockStatements.

(88) 	Shift/Reduce	-> Shift
{ 
	{ VariableDefination : var VariableDeclarationList ·, ( ;/, ) }, 
	{ VariableDeclarationList : VariableDeclarationList · , VariableDefination, ( ;/, ) } 
}
类似悬挂else问题.

(153) 	Shift/Reduce	-> Shift
{
	{ IfStatement : if ParenthesizedExpression Statement ·, ( zero/number/string/identifier/;/var/{/if/while/for/(/continue/break/return/function/+/-/delete/void/++/--/~/!/new/[/this/null/true/false/}/else ) }, 
	{ IfStatement : if ParenthesizedExpression Statement · else Statement, ( zero/number/string/identifier/;/var/{/if/while/for/(/continue/break/return/function/+/-/delete/void/++/--/~/!/new/[/this/null/true/false/}/else ) } 
}
悬挂else问题.

(52)	Reduce/Reduce
{
	{ FunctionDefinition : NamedFunction ·, ( zero/number/string/identifier/;/var/{/if/while/for/(/continue/break/return/function/+/-/delete/void/++/--/~/!/new/[/this/null/true/false/} ) }, 
	{ FunctionExpression : NamedFunction ·, ( =/*=//=/%=/+=/-=/<<=/>>=/&=/|=/^=/[/./(/;/,/?/||/&/==/!=/</>/<=/>=/<</>>/+/-/*///%/++/-- ) } 
}
