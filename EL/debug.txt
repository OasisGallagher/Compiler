[W] invalid operator precedence grammar, precedence (), end) : (>, =)
[W] invalid operator precedence grammar, precedence (), newline) : (>, <)
[W] invalid operator precedence grammar, precedence (), ;) : (>, <)
[W] Push if
[W] Push number
1	Reduce `number` to `$factor`
[W] Push < 
[W] Push identifier
2	Reduce `identifier` to `$factor`
3	Reduce `$factor <  $factor` to `$exp`
[W] Push then
[W] Push identifier
[W] Push = 
[W] Push number
4	Reduce `number` to `$factor`
5	Reduce `identifier =  $factor` to `$assign_stmt`
[W] Push newline
[W] Push while
[W] Push identifier
6	Reduce `identifier` to `$factor`
[W] Push < 
[W] Push number
7	Reduce `number` to `$factor`
8	Reduce `$factor <  $factor` to `$exp`
[W] Push do
[W] Push identifier
[W] Push = 
[W] Push identifier
9	Reduce `identifier` to `$factor`
[W] Push *
[W] Push identifier
10	Reduce `identifier` to `$factor`
11	Reduce `$factor * $factor` to `$term`
12	Reduce `identifier =  $term` to `$assign_stmt`
[W] Push ;
13	Reduce `$assign_stmt ;` to `$stmt_seq`
[W] Push newline
[W] Push identifier
[W] Push = 
[W] Push identifier
14	Reduce `identifier` to `$factor`
[W] Push +
[W] Push number
15	Reduce `number` to `$factor`
16	Reduce `$factor + $factor` to `$simple_exp`
17	Reduce `identifier =  $simple_exp` to `$assign_stmt`
18	Reduce `$stmt_seq newline $assign_stmt` to `$stmt_seq`
[W] Push ;
19	Reduce `$stmt_seq ;` to `$stmt_seq`
[W] Push newline
20	Reduce `$stmt_seq newline` to `$stmt_seq`
[W] Push end
21	Reduce `while $exp do $stmt_seq end` to `$while_stmt`
22	Reduce `$assign_stmt newline $while_stmt` to `$stmt_seq`
[W] Push newline
[W] Push write
[W] Push identifier
23	Reduce `write identifier` to `$write_stmt`
24	Reduce `$stmt_seq newline $write_stmt` to `$stmt_seq`
[W] Push ;
25	Reduce `$stmt_seq ;` to `$stmt_seq`
[W] Push newline
26	Reduce `$stmt_seq newline` to `$stmt_seq`
[W] Push end
27	Reduce `if $exp then $stmt_seq end` to `$if_stmt`
[W] Push newline
[W] Push read
[W] Push identifier
28	Reduce `read identifier` to `$read_stmt`
29	Reduce `$if_stmt newline $read_stmt` to `$stmt_seq`
[W] Push ;
30	Reduce `$stmt_seq ;` to `$stmt_seq`
[W] Push newline
[W] Push while
[W] Push identifier
31	Reduce `identifier` to `$factor`
[W] Push < 
[W] Push identifier
32	Reduce `identifier` to `$factor`
33	Reduce `$factor <  $factor` to `$exp`
[W] Push do
[W] Push write
[W] Push identifier
34	Reduce `write identifier` to `$write_stmt`
[W] Push newline
35	Reduce `$write_stmt newline` to `$stmt_seq`
[W] Push end
36	Reduce `while $exp do $stmt_seq end` to `$while_stmt`
37	Reduce `$stmt_seq newline $while_stmt` to `$stmt_seq`
[W] Push newline
[W] Push if
[W] Push identifier
38	Reduce `identifier` to `$factor`
[W] Push then
[W] Push read
[W] Push identifier
39	Reduce `read identifier` to `$read_stmt`
[W] Push ;
40	Reduce `$read_stmt ;` to `$stmt_seq`
[W] Push end
41	Reduce `if $factor then $stmt_seq end` to `$if_stmt`
42	Reduce `$stmt_seq newline $if_stmt` to `$stmt_seq`
[W] Push newline
[W] Push function
[W] Push identifier
[W] Push (
[W] Push identifier
43	Reduce `identifier` to `$factor`
[W] Push ,
[W] Push identifier
44	Reduce `identifier` to `$factor`
45	Reduce `$factor , $factor` to `$argument_list`
[W] Push )
[W] Push identifier
[E] unexpected token write at 18:40
